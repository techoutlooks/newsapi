schema {
  query: Query,
  mutation: Mutation
}

type Mutation {
    doNothing: String!
}



type Query {

    publisherMetrics    (
        networks:[String], dimensions: [String], metrics: [String],
        days: [String], days_from: String, days_to: String, limit: Int
    ): Object

    sportsSchedule(sport:String!, season:String, limit:Int): [SportEvent]

    post(post_id: String!, adjacent: Int): Post

    posts(type:String, countries:[String], categories:[String], post_ids:[String],
          days: String, days_from:String, days_to:String,
          limit:Int, adjacent: Int, has_videos:Boolean): [Post]

    mostPublished(type:String, countries:[String], categories:[String], post_ids:[String],
          days: String, days_from:String, days_to:String,
          limit:Int, adjacent: Int, has_videos:Boolean): [DocStat]

    mostOccurring(type:String, countries:[String], categories:[String], post_ids:[String],
          days: String, days_from:String, days_to:String,
          limit:Int, adjacent: Int, has_videos:Boolean): [DocStat]

    categories(match: Object, fields: Object, limit:Int): [String]
    tags(match: Object, fields: Object, limit:Int): [String]

    countriesCounts(limit:Int): [DocStat]

    categoriesCounts(type:String, countries:[String], categories: [String],
        days: String, days_from:String, days_to:String, limit:Int has_videos: Boolean): [DocStat]

    tagsCounts(type:String, countries:[String], categories: [String],
        days: String, days_from:String, days_to:String, limit:Int has_videos: Boolean): [DocStat]
}



type SportEvent {
    sport: String
    event: String
    season: String
    league: String
    venue: String
    time: String
    city: String
    country: String
    status: String
    postponed: String
    thumb: String
    home_team: String
    away_team: String
}


type Post {
    id: ID!
    country: String!
    link: String
    short_link: String
    link_hash: String
    type: String
    title: String
    text: String
    excerpt: String
    publish_time: String
    modified_time: String
    top_image: String
    images: [String]
    videos: [String]
    authors: [Author]
    keywords: [String]
    tags: [String]
    paper: Paper
    version: String
    is_draft: Boolean
    is_scrap: Boolean
    is_meta: Boolean

    score: Score
    siblings: [Post]
    related: [Post]
    category: String
    caption: String
    summary: String

    previous: [Post]
    next: [Post]

}

type Author {
    name: String
    profile_image: String,
    role: String
}

type Paper {
    brand: String
    description: String
    logo_url: String
}


type DocStat {
    name: String!
    value: String!
    doc: Object
}


type Country {
    country_name: String!
    timezone:String!
    currency:String!
    languages:[String]!
    postCount: Int!
}


type Score {
    similarity: Float
    caption: Float
    summary: Float
    category: Float
}


scalar Object
